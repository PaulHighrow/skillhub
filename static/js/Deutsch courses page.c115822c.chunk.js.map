{"version":3,"file":"static/js/Deutsch courses page.c115822c.chunk.js","mappings":"2OA2DA,UAhDgB,SAAHA,GAAkB,IAAZC,EAAID,EAAJC,KACjBC,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAE5BI,EAAc,WAClBD,GAAe,SAAAE,GAAM,OAAKA,CAAM,IAC3BC,SAASC,KAAKC,MAAMC,YACvBH,SAASC,KAAKC,MAAMC,UAAY,SAEpC,EAEMC,EAAa,WACjBP,GAAe,SAAAE,GAAM,OAAc,CAAK,KACvCC,SAASC,KAAKC,MAAMC,WAAaP,EAC7BI,SAASC,KAAKC,MAAMC,UAAY,SAChCH,SAASC,KAAKC,MAAMC,UAAY,EACvC,EAgBA,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAAC,GACD,WAAfA,EAAMC,MAAqBZ,GAC7BQ,GAEJ,EAIA,OAFAK,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,EACxC,CACF,KAGEM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACG,EAAAA,EAAiB,CAAAD,SAAA,EAChBE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACb,WAAYA,EAAYN,YAAaA,KAC3CkB,EAAAA,EAAAA,KAACE,EAAAA,EAAU,QAEbF,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,KAETH,EAAAA,EAAAA,KAACI,EAAAA,EAAY,CAAC7B,KAAMA,KACpByB,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CAACvB,YAAaA,EAAaM,WAAYA,KAClDY,EAAAA,EAAAA,KAACM,EAAAA,EAAO,KACRN,EAAAA,EAAAA,KAACO,EAAAA,EAAO,IACP3B,IAAeoB,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACpB,WAAYA,EAAYb,KAAMA,MAG9D,C","sources":["pages/Deutsch/Deutsch.jsx"],"sourcesContent":["import { AboutUs } from 'components/AboutUs/AboutUs';\nimport { BackgroundWrapper } from 'components/BackgroundWrapper/BackgroundWrappers';\nimport { Consent } from 'components/Consent/Consent';\nimport { EdCenter } from 'components/EdCenter/EdCenter';\nimport { ExamCenter } from 'components/ExamCenter/ExamCenter';\nimport { Hero } from 'components/Hero/Hero';\nimport { HowItWorks } from 'components/HowItWorks/HowItWorks';\nimport { LeadForm } from 'components/LeadForm/LeadForm';\nimport { Translations } from 'components/Translations/Translations';\nimport { useEffect, useState } from 'react';\n\nconst Deutsch = ({ utms }) => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n    if (!document.body.style.overflowY) {\n      document.body.style.overflowY = 'hidden';\n    }\n  };\n\n  const closeModal = () => {\n    setIsOpenModal(isOpen => (isOpen = false));\n    !document.body.style.overflowY && isOpenModal\n      ? (document.body.style.overflowY = 'hidden')\n      : (document.body.style.overflowY = '');\n  };\n\n  useEffect(() => {\n    const onEscapeClose = event => {\n      if (event.code === 'Escape' && isOpenModal) {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n\n    return () => {\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  });\n\n  return (\n    <>\n      <BackgroundWrapper>\n        <Hero closeModal={closeModal} toggleModal={toggleModal} />\n        <HowItWorks />\n      </BackgroundWrapper>\n      <EdCenter />\n      {/* <Admission /> */}\n      <Translations utms={utms} />\n      <ExamCenter toggleModal={toggleModal} closeModal={closeModal} />\n      <AboutUs />\n      <Consent />\n      {isOpenModal && <LeadForm closeModal={closeModal} utms={utms} />}\n    </>\n  );\n};\n\nexport default Deutsch;\n"],"names":["_ref","utms","_useState","useState","_useState2","_slicedToArray","isOpenModal","setIsOpenModal","toggleModal","isOpen","document","body","style","overflowY","closeModal","useEffect","onEscapeClose","event","code","window","addEventListener","removeEventListener","_jsxs","_Fragment","children","BackgroundWrapper","_jsx","Hero","HowItWorks","EdCenter","Translations","ExamCenter","AboutUs","Consent","LeadForm"],"sourceRoot":""}